{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,aAIpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZQJ,SAASC,cAAc,gBAC/BU,iBAAiB,SAcxB,SAAmBC,GACjBA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOhB,EAAKK,MAAMY,OAC/BC,EAAOF,OAAOhB,EAAKkB,KAAKD,OACxBE,EAASH,OAAOhB,EAAKmB,OAAOF,OAChC,GAAIC,EAAO,GAAKC,GAAU,EACxBC,EAAAtB,GAASuB,OAAOC,QAAS,wBAA0B,CAAEC,QAAS,WAE5D,IAAG,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,GAAK,EAAG,CAElCrB,EAAcqB,EADKT,EAAaG,EAAOM,GAEpCC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBe,EAAAtB,GAASuB,OAAOM,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,MAE5C,CACAkB,QAAS,K,IAIdM,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBe,EAAAtB,GAASuB,OAAOC,QACd,sBAAqCM,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form.form');\nconst button = document.querySelector('.form button');\nbutton.addEventListener('click', onPromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction onPromise(elm) {\n  elm.preventDefault();\n  let firstDelay = Number(form.delay.value);\n  let step = Number(form.step.value);\n  let amount = Number(form.amount.value);\n  if (step < 0 || amount <= 0) {\n    Notiflix.Notify.failure(`❌ Enter the value > 0`, { timeout: 3000 });\n  } else {\n    for (let i = 0; i < amount; i += 1) {\n      let promiseDelay = firstDelay + step * i;\n      createPromise(i, promiseDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n\n            {\n              timeout: 3000,\n            }\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","elm","preventDefault","firstDelay","Number","value","step","amount","$parcel$interopDefault","Notify","failure","timeout","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.9fe30ca9.js.map"}